name: Release

on:
  push:
    tags:
      - v*

jobs:
  deploy:
    name: Deploy server to esm.sh nodes
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}

    strategy:
        matrix:
          environment: [production-node-1]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x

      - name: Run Deploy Script
        run: ./scripts/deploy-ci.sh
        env:
          GOOS: ${{ secrets.DEPLOY_HOST_OS }}
          GOARCH: ${{ secrets.DEPLOY_HOST_ARCH }}
          DEPLOY_HOST_NAME: ${{ secrets.DEPLOY_HOST_NAME }}
          DEPLOY_HOST_PORT: ${{ secrets.DEPLOY_HOST_PORT }}
          DEPLOY_SSH_USER: ${{ secrets.DEPLOY_SSH_USER }}
          DEPLOY_SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          SERVER_CONFIG: ${{ secrets.SERVER_CONFIG }}
          SERVER_VERSION: ${{ github.ref_name }}

  push_docker_image:
    name: Push docker image to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/esm-dev/esm.sh:latest,ghcr.io/esm-dev/esm.sh:${{ github.ref_name }}
          build-args: |
            SERVER_VERSION=${{ github.ref_name }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [deploy, push_docker_image]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Release Note
        run: echo "console.log(require('fs').readFileSync('CHANGELOG.md','utf8').split('## ')[1].slice('${{ github.ref_name }}'.length).trim())" | node > release-note.txt

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release-note.txt
